Segunda-Feira
    Ele usa o figma para fazer o layout da aplicação de mais ou menos como deve ser. 
    Para hoje será feito... 
        A criação do projeto front end e back end 
        Salvar os projetos no github em monorepo (o que seria isso)
        Montar o visual estático do front end

    Node serve para que? E o yarn? 
    npm install --global yarn (Esse é o comando que o nélio fala que é para ser usado, para instalar o yarn)
    yarn install (porém eu usei esse para instalar a parada aqui na minha máquina depois que o guh criou o projeto para mim)
        
    yarn create react-app frontend --template typescript (ele tacou esse comando dentro da pasta dsmovie)
    npx create-react-app frontend --template typescript (esse é o segundo comando caso o primeiro dê erro)
        esse comando cria o projeto react. Usando o aplicativo create react-app que é um aplicativo que ajuda a criar o projeto pra gente. 
         o nome do projeto é frontend e tem o template de typescript que é um javascript com alguns recursos a mais inclusive a tipagem 
         de dados com o apoio do compilador. 

    yarn start -- para executar o projeto

    Detalhes backend 
        Web 
        JPA 
        H2 
        Postgrees 
        Security 
    
    Ele fez um ajuste no arquivo pom.xml 
    dir lista os diretórios da pasta atual. 

    Comandos Git
        git init

        git add .

        git commit -m "Projeto criado"

        git branch -M main -- Garante que todo mundo fica com a branch chamada main 

        git remote add origin git@github.com:seuusuario/seurepositorio.git -- Antes de usar esse comando ele criou o projeto no
         github para associar com o repositório local. 

        git remote add origin git@github.com:Z-Maguinho-do-Piaui/dsmovie.git (Quando trocou para SSH, gerou esse link)
        git remote add origin https://github.com/Z-Maguinho-do-Piaui/dsmovie.git

        git push -u origin main

    O react coloca o resultado do processamento dele dentro da div id="root". 
    Boostrap é um framework de css que traz muita coisa pronta para o layout ser montado de 
     uma maneira mais fácil mais produtiva. (bootstrap css - para mais informações)

    assets -- recursos, uma pasta onde guarda imagens algum outro arquivo usado. 
    imagens em svg podem ser ampliadas sem mudar a renderização da imagem. 

    Componente React é uma função do JavaScript 
    export -- significa que a função pode ser usada em outro arquivo. 

    ReactDOM.render 
    React.StrictMode - deixa o projeto mais protegido mais controlado. 
    App.tsx é chamado pelo index.css e este é chamado via getElementById pelo index.tsx
    
    App.tsx não retorna html e sim jsx pois dentro dele podemos colocar códigos do react para 
     ele rodar. 

    O react trabalha com components e vai chamando um a um. 
    
    Um projeto react sem typescript tem a extensão jsx já com o typescript tem a extensão 
     tsx (extensão do arquivo react com typescript)

    '../../assets/img/github.svg';
        é necessário ir colocando ../ para ir voltando de diretório em diretório 

    A não ser que se use isso no tsconfig.json para ficar fazendo isso 
        "baseUrl": "./src" e passa a ficar assim 'assets/img/github.svg'

    Componente em react é uma função que retorna um código jsx através da exportação com o mesmo 
     nome do método. 

    
    "container" nesse projeto é uma classe do bootstrap que determina todo o elemento que contém 
     ele em uma determinada largura.

    Os estilos da aplicação começam com o nome dsmovie   

    ============================================================================================
    Para trabalhar com rotas no projeto é instalado React Router Dom, pode se importar mais de um 
     componete colocando chaves. 

    shift + alt + f -- identa o código.

    Em arquivos jsx, quando vai se colocar uma expressão react é colocado o código dentro de src={}

    Lembre-se uma função só pode exportar um componente. Geralmente usa-se div para colcoar mais de  
     um componente. Porém o nélio usou o fragment (<> </> - pois colocando um div aparecia um div a 
      mais no html)

    O MovieCard pegou o css do formulário porque o css dele é global. 

    className="row" em Listing é uma classe do bootstrap, ela organiza os elementos. 

    bootstrap tem breakpoint (só digitar bootstrap breakpoint no google e entrar)

    outra coisa a se entender é o bootstrap grid system. Por padrão o bootstrap separa 
     sua largura da tela em 12 partes, porém isso pode ser configurado.  

    monerreco -- aplicação estruturada. Com backend e frontend. E no front fizemos o layout estático 
     estruturado em componentes React! 

    
Quarta-Feira
    Busca paginada o que seria? Perfis de teste com banco h2. 

    Ele criou uma classe de configuração para o CORS 
    Quando duas aplicações estão hospedadas em hosts diferentes. Por padrão um sistema que tá em um lugar não pode acessar 
     uma api que está em outro lugar. Então temos que liberar isso com a configuração do cors. 

     O desenho com uma linha e uma classe pendurada no meio através de linhas traçantes se chama classe de associação. 
      Isso ocorre quando temos um relacionamento muito para muitos. Quando temos relacionamentos muito para muitos temos uma 
      tabela ali no meio para fazer o intermediário em um banco de dados relacional. E quando temos um campo extra na tabela 
      intermediária temos que fazer uma classe de associação no meio. 

    No Java quando usamos JPA o identificador de cada chave tem que ser somente um atributo. No banco de 
     dados relacional aprendemos que na tabela de associação temos duas chaves primárias que formam a chave 
     composta. Porém na aplicação temos criar uma classe auxiliar para termos as duas referências das classes 
     que terão o id na tabela de associação. 

    Quando se cria uma chave composta em Java é necessário dar um new para se certificar que o objeto está 
     instanciado.

    Dê preferência a especificação e não a implementação, porque se troca a implementação a especificação continua a mesma.

    Camada de acesso a dados é responsável por realizar operações únicas com o banco de dados. 

    Camada de negócio é responsável por realizar várias operações no banco de dados. (essa camada orquestra várias operações de acesso a dados)

    @Autowired - O framework do Java já possui um recurso para fazer o gerenciamento de injeção de dependência automático. 

    Função de alta ordem aplica uma função a cada elemento da lista (expressão lambda)

    Ele criou uma nova collection no postman, e foi criando requisições lá dentro. 

    Salvar avaliação 
        Lógica:
            Informar email, id do filme e valor da avaliação (1 a 5).

            Recuperar usuário do banco de dados pelo email. Se o usuário não existir, insira no banco.

            Salvar a avaliação do usuário para o dado filme.

            Recalcular a avaliação média do filme e salvar no banco de dados.

    Existe um conceito chamado de salvar de forma indempotente, que basicamente é. Depois que você salvar uma vez, se tentar de novo 
     salvar os mesmos dados não irá mudar mais nada. Para isso usamos o verbo put.
        Salvar os mesmo dados mais de uma vez é como salvar de uma vez só. 

    O h2 roda na web e isso é muito bom.
    

    Estrutura da url do banco de dados do banco do heroku 
        Depois das duas barras - Nome do usuário 
        Depois dos dois pontos - Senha do usuário 
        Depois do @ - vem o host (onde está hospedado o banco de dados)
        Depois dos 2 pontos - vem a porta 
        E depois da barra - vem o nome da base de dados 


    Incluir a base de dados também na área advanced em Db restriction. Se não colocar isso aparece um monte de base de dados 
     sendo impossível encontrar a sua. 

    é preciso ter o hekoku cli instalado na máquina para implantar o projeto no heroku. 

    heroku -v (para ver a versão)
    heroku login 
    heroku git:remote -a <nome-do-app> (para associar o repositório local com o heroku, o nome da aplicação é o nome do aplicativo no heroku)
    git remote -v (para conferir se realmente foi associado o repositório com o heroku)
    git subtree push --prefix backend heroku main (para enviar só que quando se tratar de um projeto monorreco (ter tanto o front e o back nas mesmas pastas é preciso 
        colocar o comando --prefix definindo a pasta que deverá ser subida))
    
    usou o netlify para hospedar o front end. 
    uma vez dado push na master do repositório github o netlify já faz um novo deploy.

    
Sexta-feira Integração front end e back end 
    Três pilares do react 
        Componentes 
        Props 
        Estado 

    React Hooks 
        useState 
        useEffect 
        useParams 
        useNavigate 


    É possível fazer requisições com a fetch api do javascript porém o axios deixa as coisas 
     mais fáceis. 
    
    ?? -- operador de coalecênsia nula igual o operador ternário. 

    lembre-se que um componente react é uma função JavaScript 

    O resultado da request é uma promise um objeto que encapsula a ação que pode acontecer depois 
     para executar algo depois que chegar a resposta da requisição é necessário colocar na frente da chamada 
     o .then() e dentro dele colocamos o que queremos que seja executado, e isso só será executado depois que a 
     requisição voltar. 

    Hooks é a tradução de gancho.
    Hooks são funções cujo comportamento está vinculado ao estado e ao ciclo de vida do React a partir de componentes funcionais.
    https://pt-br.reactjs.org/docs/hooks-overview.html

    o componente react tem um ciclo de vida, por isso as vezes ele chama o backend mais de uma vez, ele é um componente visual, ele tem 
     que atualizar as coias indepentendemente dos dados, então ele passa mais de uma vez pelo back end ao longo do ciclo de vida dele. 

    tem que se colocar uma lógica ligada ao ciclo de vida do componente para que isso não aconteça. E isso se dá aos hooks 

    useState - serve para manter / armazenar os dados / estados dentro do componente. 
        é uma boa prática iniciar o useState com um valor. 

    ele colocou chaves no import do MoviePage porque ele pega mais de uma coisa que tá lá. Então para pegar 
     especificamente o movie page que tá lá é posto a chave. 

    Hook: useEffect
    Executar algo na instanciação ou destruição do componente, observar estado
    basicamente quando alguma coisa mudar ele executa algo. Ele recebe dois argumentos, uma função para ser executada e o segundo é uma lista de 
     objetos que ele irá observar. Ou seja sempre que alterar alguma coisa nesse objeto que ele está observando ele executa a função de novo. 
     se a lista de objetos for vazia ele só executa o método quando o componente for carregado. 

    Props podem ser entendidas como argumentos do componente react. Elas são muito simples. 
    https://pt-br.reactjs.org/docs/components-and-props.html
    em uma renderização dinâmica de coleção, cada elemento renderizado DEVE possuir um atributo key.
        esse key é um valor único para cada registro. 

    ? no parâmetro significa que se existir ele pega uma valor se não ele vai nulo. 

    Entre o Pagination e o Listing existe observer (um componente que emite evento para outro componente)

    Como se trata de envio de formulário a primeira coisa que deve ser feita (e isso é feito bastante em front end)
     é evitar o envio da tela sem o carregamento da pagina e para parar isso usa-se event.preventDefault() 

     event.target é uma referência para o formulário e no formulário chama-se o propriedade definida através do id e pega-se 
      o seu valor. 

    useNavigate() -- serve para dar um comando de redirecionamento de rota. 

    1:33:50 / 2:00:25

     